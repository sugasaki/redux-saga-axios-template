{"version":3,"sources":["components/NavMenu.js","components/Layout.js","redux/actions/actionTypes.js","redux/actions/index.js","components/ResultTable.js","components/Home.js","components/Counter.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/services/api.js","redux/services/index.js","redux/sagas/index.js","index.js","redux/store/configureStore.js"],"names":["NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","children","Image","size","src","style","marginRight","Component","displayName","name","Layout","apply","arguments","NavMenu_NavMenu","marginTop","USER_FETCH_REQUESTED","actionCreators","requestPosts","createAction","ActionTypes","receivePosts","faildPosts","ResultTable","items","Table","celled","Header","Row","Body","map","item","id","Cell","userId","title","body","console","log","Array","isArray","contents","renderTable","renderTableSingle","connect","units","Home","loading","message","e","searchString","target","_this2","isFetching","components_ResultTable","errorContents","hasError","Message","error","errorMessage","Grid","divided","columns","Input","onChange","handleMessage","icon","Icon","circular","link","onClick","placeholder","dispatch","bindActionCreators","Counter","currentCount","incrementCounter","className","App","Layout_Layout","Route","path","component","Boolean","window","location","hostname","match","handleActions","_handleActions","defineProperty","action","payload","rootReducer","combineReducers","API_ROOT","callApi","endpoint","fullUrl","indexOf","warn","axios","get","then","res","result","catch","err","fetchPosts","concat","fetchComments","api","_api","rootSaga","data","_ref","regenerator_default","wrap","_context","prev","next","sent","put","stop","_marked","_context2","takeEvery","_marked2","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","store","initialState","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","close","END","configureStore","ReactDOM","render","es","BrowserRouter","basename","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe16048c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Container, Image, Menu } from \"semantic-ui-react\";\n\n//import \"./NavMenu.css\";\n\nexport class NavMenu extends Component {\n  static displayName = NavMenu.name;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    return (\n      <header>\n        <Menu fixed=\"top\" inverted>\n          <Container>\n            <Menu.Item header as={NavLink} exact to=\"/\" children=\"Home\">\n              <Image\n                size=\"mini\"\n                src=\"./logo.png\"\n                style={{ marginRight: \"1.5em\" }}\n              />\n              Home\n            </Menu.Item>\n            <Menu.Item\n              header\n              as={NavLink}\n              exact\n              to=\"/counter\"\n              children=\"Counter\"\n            />\n          </Container>\n        </Menu>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { NavMenu } from \"./NavMenu\";\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render() {\n    return (\n      <div>\n        <NavMenu />\n        <Container style={{ marginTop: \"7em\" }}>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","export const USER_FETCH_REQUESTED = \"USER_FETCH_REQUESTED\";\nexport const USER_FETCH_SUCCESS = \"USER_FETCH_SUCCESS\";\nexport const USER_FETCH_FAILED = \"USER_FETCH_FAILED\";\n","import { createAction } from \"redux-actions\";\nimport * as ActionTypes from \"./actionTypes\";\n\n//アクションを作成する。クリック等のトリガーとなる。\nexport let actionCreators = {\n  requestPosts: createAction(ActionTypes.USER_FETCH_REQUESTED),\n  receivePosts: createAction(ActionTypes.USER_FETCH_SUCCESS),\n  faildPosts: createAction(ActionTypes.USER_FETCH_FAILED)\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"semantic-ui-react\";\n\nclass ResultTable extends Component {\n  renderTable(items) {\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <th>userId</th>\n            <th>id</th>\n            <th>title</th>\n            <th>body</th>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {items.map(item => (\n            <Table.Row key={item.id}>\n              <Table.Cell>{item.userId}</Table.Cell>\n              <Table.Cell>{item.id}</Table.Cell>\n              <Table.Cell>{item.title}</Table.Cell>\n              <Table.Cell>{item.body}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderTableSingle(item) {\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <th>userId</th>\n            <th>id</th>\n            <th>title</th>\n            <th>body</th>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{item.userId}</Table.Cell>\n            <Table.Cell>{item.id}</Table.Cell>\n            <Table.Cell>{item.title}</Table.Cell>\n            <Table.Cell>{item.body}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  render() {\n    console.log(Array.isArray(this.props.items));\n    let contents = Array.isArray(this.props.items)\n      ? this.renderTable(this.props.items)\n      : this.renderTableSingle(this.props.items);\n\n    return <div> {contents}</div>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.units;\n}\nexport default connect(mapStateToProps)(ResultTable);\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Message } from \"semantic-ui-react\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport { actionCreators } from \"../redux/actions\";\n\nimport ResultTable from \"./ResultTable\";\n\nclass Home extends Component {\n  displayName = Home.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      message: \"\"\n    };\n  }\n\n  handleMessage(e) {\n    this.setState({\n      searchString: e.target.value\n    });\n  }\n\n  requestPosts() {\n    this.props.requestPosts(this.state.searchString);\n  }\n\n  render() {\n    let contents = this.props.isFetching ? <p>Loading...</p> : <ResultTable />;\n\n    let errorContents = this.props.hasError ? (\n      <Message error>{this.props.errorMessage}</Message>\n    ) : (\n      <div />\n    );\n\n    return (\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={12}>\n          <Input\n            loading={this.props.isFetching}\n            onChange={e => this.handleMessage(e)}\n            icon={\n              <Icon\n                name=\"search\"\n                inverted\n                circular\n                link\n                onClick={() => this.requestPosts()}\n              />\n            }\n            placeholder=\"Search...\"\n          />\n\n          {this.state.searchString}\n        </Grid.Row>\n\n        <Grid.Row columns={12}>\n          {errorContents}\n          {contents}\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  state => state.units, //  ../reducers/index.js で定義\n  dispatch => bindActionCreators(actionCreators, dispatch)\n)(Home);\n","import React, { Component } from \"react\";\n\nexport default class Counter extends Component {\n  static displayName = Counter.name;\n\n  constructor(props) {\n    super(props);\n    this.state = { currentCount: 0 };\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Counter</h1>\n\n        <p>This is a simple example of a React component.</p>\n\n        <p>\n          Current count: <strong>{this.state.currentCount}</strong>\n        </p>\n\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>\n          Increment\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport { Layout } from \"./components/Layout\";\nimport Home from \"./components/Home\";\nimport Counter from \"./components/Counter\";\nexport default class App extends Component {\n  static displayName = App.name;\n\n  render() {\n    return (\n      <Layout>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/counter\" component={Counter} />\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\n\nimport * as ActionTypes from \"../actions/actionTypes\";\n\n//Reducerで設定する、プロパティの初期値を設定する\nlet initState = {\n  isFetching: false,\n  items: [],\n  hasError: false,\n  errorMessage: \"\"\n};\n\n//redux-actionsのhandleActions を使って、コード規約に沿ったreducerを作成する\nconst units = handleActions(\n  {\n    [ActionTypes.USER_FETCH_REQUESTED]: (state, action) => ({\n      isFetching: true,\n      hasError: false\n    }),\n\n    [ActionTypes.USER_FETCH_SUCCESS]: (state, action) => ({\n      isFetching: false,\n      items: action.payload\n    }),\n\n    [ActionTypes.USER_FETCH_FAILED]: (state, action) => ({\n      isFetching: false,\n      items: [],\n      hasError: true,\n      errorMessage: action.payload\n    })\n  },\n  initState\n);\n\nconst rootReducer = combineReducers({\n  units: units\n  //selectedReddit,\n});\n\nexport default rootReducer;\n","import axios from \"axios\";\n\n//const API_ROOT = \"https://api.github.com/\";\nconst API_ROOT = \"https://jsonplaceholder.typicode.com/\";\n\n// Fetches an API response\nfunction callApi(endpoint) {\n  const fullUrl =\n    endpoint.indexOf(API_ROOT) === -1 ? API_ROOT + endpoint : endpoint;\n\n  console.warn(fullUrl);\n\n  return axios\n    .get(fullUrl)\n    .then(res => {\n      const result = res;\n      return { result }; //返して代入する変数名と合わせる\n    })\n    .catch(err => {\n      return { err };\n    });\n}\n\nexport const fetchPosts = id => callApi(`posts/${id}`);\nexport const fetchComments = id => callApi(`comments/${id}`);\n","import * as _api from \"./api\";\n//import { browserHistory } from \"react-router\";\n\nexport const api = _api;\n//export const history = browserHistory;\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { api } from \"../services\";\n\nimport * as ActionTypes from \"../actions/actionTypes\";\nimport { actionCreators } from \"../actions/index\";\n\n//fetching Posts\nexport function* fetchPosts(action) {\n  console.warn(action.payload);\n\n  //fetch axiosPostsApi\n  let data = action.payload;\n  if (!data) data = \"\";\n  const { result, err } = yield call(api.fetchPosts, data);\n  console.warn(result);\n\n  if (result) {\n    //call receivePosts action\n    yield put(actionCreators.receivePosts(result.data));\n  } else {\n    yield put(actionCreators.faildPosts(err.message));\n  }\n}\n\n//initial rudux-saga\nexport default function* rootSaga() {\n  yield takeEvery(ActionTypes.USER_FETCH_REQUESTED, fetchPosts);\n}\n","import \"react-app-polyfill/ie11\"; // For IE 11 support\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store/configureStore\";\nimport rootSaga from \"./redux/sagas\";\n\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\nconst rootElement = document.getElementById(\"root\");\n\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={baseUrl}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  rootElement\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware, { END } from 'redux-saga'\nimport rootReducer from '../reducers'\n\n\n\n\nexport default function configureStore(initialState) {\n    const sagaMiddleware = createSagaMiddleware()\n    const store = createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(sagaMiddleware)\n    )\n\n    store.runSaga = sagaMiddleware.run\n    store.close = () => store.dispatch(END)\n    return store\n}\n"],"sourceRoot":""}