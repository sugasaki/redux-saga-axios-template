{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/index.js","components/ResultTable.js","components/Home.js","components/Counter.js","redux/actions/counter.js","components/NavMenu.js","routes.js","App.js","serviceWorker.js","redux/reducers/home.js","redux/reducers/counter.js","redux/reducers/index.js","redux/services/api.js","redux/services/index.js","redux/sagas/index.js","index.js","redux/store/configureStore.js"],"names":["USER_FETCH_REQUESTED","actionCreators","requestPosts","createAction","ActionTypes","receivePosts","faildPosts","connect","state","home","props","item","items","contents","Array","isArray","react_default","a","createElement","Table","celled","Header","Row","Body","map","key","id","Cell","userId","title","body","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayName","name","loading","message","e","setState","searchString","target","value","_this2","isFetching","components_ResultTable","errorContents","hasError","Message","error","errorMessage","Grid","divided","columns","Input","onChange","handleMessage","icon","Icon","inverted","circular","link","onClick","placeholder","Component","dispatch","bindActionCreators","count","increment","type","decrement","NavMenu","Menu","fixed","Container","Item","header","as","NavLink","exact","to","children","Image","size","src","style","marginRight","routes","components_NavMenu","marginTop","Switch","Route","path","component","Counter","NoMatch","App","_ref","history","lib","Boolean","window","location","hostname","match","homeReducer","handleActions","_handleActions","defineProperty","action","payload","counterReducer","arguments","length","undefined","rootReducer","combineReducers","router","connectRouter","API_ROOT","callApi","endpoint","fullUrl","indexOf","console","log","axios","get","then","res","result","catch","err","fetchPosts","concat","fetchComments","api","_api","rootSaga","data","regenerator_default","wrap","_context","prev","next","sent","put","stop","_marked","_context2","takeEvery","_marked2","baseUrl","document","getElementsByTagName","getAttribute","createBrowserHistory","basename","store","initialState","logger","createLogger","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","runSaga","run","close","END","configureStore","initialReduxState","ReactDOM","render","react_redux_es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20bda1be.chunk.js","sourcesContent":["export const USER_FETCH_REQUESTED = \"USER_FETCH_REQUESTED\";\nexport const USER_FETCH_SUCCESS = \"USER_FETCH_SUCCESS\";\nexport const USER_FETCH_FAILED = \"USER_FETCH_FAILED\";\n","import { createAction } from \"redux-actions\";\nimport * as ActionTypes from \"./actionTypes\";\n\n//アクションを作成する。クリック等のトリガーとなる。\nexport let actionCreators = {\n  requestPosts: createAction(ActionTypes.USER_FETCH_REQUESTED),\n  receivePosts: createAction(ActionTypes.USER_FETCH_SUCCESS),\n  faildPosts: createAction(ActionTypes.USER_FETCH_FAILED)\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"semantic-ui-react\";\n\nfunction renderTable(items) {\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <th>userId</th>\n          <th>id</th>\n          <th>title</th>\n          <th>body</th>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {items.map(item => (\n          <Table.Row key={item.id}>\n            <Table.Cell>{item.userId}</Table.Cell>\n            <Table.Cell>{item.id}</Table.Cell>\n            <Table.Cell>{item.title}</Table.Cell>\n            <Table.Cell>{item.body}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n}\n\nfunction renderTableSingle(item) {\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <th>userId</th>\n          <th>id</th>\n          <th>title</th>\n          <th>body</th>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell>{item.userId}</Table.Cell>\n          <Table.Cell>{item.id}</Table.Cell>\n          <Table.Cell>{item.title}</Table.Cell>\n          <Table.Cell>{item.body}</Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  );\n}\n\nconst ResultTable = props => {\n  //console.log(Array.isArray(this.props.items));\n  let contents = Array.isArray(props.items)\n    ? renderTable(props.items)\n    : renderTableSingle(props.items);\n\n  return <div> {contents}</div>;\n};\n\nfunction mapStateToProps(state) {\n  return state.home;\n}\nexport default connect(mapStateToProps)(ResultTable);\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Message } from \"semantic-ui-react\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport { actionCreators } from \"../redux/actions\";\n\nimport ResultTable from \"./ResultTable\";\n\nclass Home extends Component {\n  displayName = Home.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      message: \"\"\n    };\n  }\n\n  handleMessage(e) {\n    this.setState({\n      searchString: e.target.value\n    });\n  }\n\n  requestPosts() {\n    this.props.requestPosts(this.state.searchString);\n  }\n\n  render() {\n    let contents = this.props.isFetching ? <p>Loading...</p> : <ResultTable />;\n\n    let errorContents = this.props.hasError ? (\n      <Message error>{this.props.errorMessage}</Message>\n    ) : (\n      <div />\n    );\n\n    return (\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={12}>\n          <Input\n            loading={this.props.isFetching}\n            onChange={e => this.handleMessage(e)}\n            icon={\n              <Icon\n                name=\"search\"\n                inverted\n                circular\n                link\n                onClick={() => this.requestPosts()}\n              />\n            }\n            placeholder=\"Search...\"\n          />\n\n          {this.state.searchString}\n        </Grid.Row>\n\n        <Grid.Row columns={12}>\n          {errorContents}\n          {contents}\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  state => state.home, //  ../reducers/index.js で定義\n  dispatch => bindActionCreators(actionCreators, dispatch)\n)(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement } from \"../redux/actions/counter\";\n\nconst Counter = props => (\n  <div>\n    <h1>Counter</h1>\n\n    <p>This is a simple example of a React component.</p>\n\n    <p>\n      Current count: <strong>{props.count}</strong>\n    </p>\n\n    <button onClick={props.increment}>+</button>\n    <button onClick={props.decrement}>-</button>\n  </div>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number,\n  increment: PropTypes.func.isRequired,\n  decrement: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  count: state.count\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch(increment()),\n  decrement: () => dispatch(decrement())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter);\n","export const increment = () => ({\n  type: \"INCREMENT\"\n});\n\nexport const decrement = () => ({\n  type: \"DECREMENT\"\n});\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Container, Image, Menu } from \"semantic-ui-react\";\n\n//import \"./NavMenu.css\";\n\nconst NavMenu = () => (\n  <header>\n    <Menu fixed=\"top\" inverted>\n      <Container>\n        <Menu.Item header as={NavLink} exact to=\"/\" children=\"Home\">\n          <Image\n            size=\"mini\"\n            src=\"./logo.png\"\n            style={{ marginRight: \"1.5em\" }}\n          />\n          Home\n        </Menu.Item>\n        <Menu.Item header as={NavLink} exact to=\"/counter\" children=\"Counter\" />\n      </Container>\n    </Menu>\n  </header>\n);\n\nexport default NavMenu;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./components/Home\";\nimport Counter from \"./components/Counter\";\nimport NoMatch from \"./components/Home\";\nimport NavMenu from \"./components/NavMenu\";\nimport { Container } from \"semantic-ui-react\";\n\nconst routes = (\n  <div>\n    <NavMenu />\n    <Container style={{ marginTop: \"6em\" }}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/counter\" component={Counter} />\n        <Route component={NoMatch} />\n      </Switch>\n    </Container>\n  </div>\n);\n\nexport default routes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport routes from \"./routes\";\n\nconst App = ({ history }) => {\n  return <ConnectedRouter history={history}>{routes}</ConnectedRouter>;\n};\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from \"redux-actions\";\nimport * as ActionTypes from \"../actions/actionTypes\";\n\n//Reducerで設定する、プロパティの初期値を設定する\nlet initState = {\n  isFetching: false,\n  items: [],\n  hasError: false,\n  errorMessage: \"\"\n};\n\n//redux-actionsのhandleActions を使って、コード規約に沿ったreducerを作成する\nconst homeReducer = handleActions(\n  {\n    [ActionTypes.USER_FETCH_REQUESTED]: (state, action) => ({\n      isFetching: true,\n      hasError: false\n    }),\n\n    [ActionTypes.USER_FETCH_SUCCESS]: (state, action) => ({\n      isFetching: false,\n      items: action.payload\n    }),\n\n    [ActionTypes.USER_FETCH_FAILED]: (state, action) => ({\n      isFetching: false,\n      items: [],\n      hasError: true,\n      errorMessage: action.payload\n    })\n  },\n  initState\n);\n\nexport default homeReducer;\n","const counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport homeReducer from \"./home\";\nimport counterReducer from \"./counter\";\n\nconst rootReducer = history =>\n  combineReducers({\n    home: homeReducer,\n    count: counterReducer,\n    router: connectRouter(history)\n  });\n\nexport default rootReducer;\n","import axios from \"axios\";\n\n//const API_ROOT = \"https://api.github.com/\";\nconst API_ROOT = \"https://jsonplaceholder.typicode.com/\";\n\n// Fetches an API response\nfunction callApi(endpoint) {\n  const fullUrl =\n    endpoint.indexOf(API_ROOT) === -1 ? API_ROOT + endpoint : endpoint;\n\n  console.log(\"callApi\", fullUrl);\n\n  return axios\n    .get(fullUrl)\n    .then(res => {\n      const result = res;\n      return { result }; //返して代入する変数名と合わせる\n    })\n    .catch(err => {\n      return { err };\n    });\n}\n\nexport const fetchPosts = id => callApi(`posts/${id}`);\nexport const fetchComments = id => callApi(`comments/${id}`);\n","import * as _api from \"./api\";\n//import { browserHistory } from \"react-router\";\n\nexport const api = _api;\n//export const history = browserHistory;\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { api } from \"../services\";\n\nimport * as ActionTypes from \"../actions/actionTypes\";\nimport { actionCreators } from \"../actions/index\";\n\n//fetching Posts\nexport function* fetchPosts(action) {\n  console.log(\"action.payload\", action.payload);\n\n  //fetch axiosPostsApi\n  let data = action.payload;\n  if (!data) data = \"\";\n  const { result, err } = yield call(api.fetchPosts, data);\n  console.log(\"call response\", result);\n\n  if (result) {\n    //call receivePosts action\n    yield put(actionCreators.receivePosts(result.data));\n  } else {\n    yield put(actionCreators.faildPosts(err.message));\n  }\n}\n\n//initial rudux-saga\nexport default function* rootSaga() {\n  yield takeEvery(ActionTypes.USER_FETCH_REQUESTED, fetchPosts);\n}\n","import \"react-app-polyfill/ie11\"; // For IE 11 support\n\nimport React from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport configureStore from \"./redux/store/configureStore\";\nimport rootSaga from \"./redux/sagas\";\n\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\nconst history = createBrowserHistory({ basename: baseUrl });\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(history, initialState);\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById(\"react-root\")\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware, { END } from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"../reducers\";\n\nexport default function configureStore(history, initialState) {\n  const logger = createLogger({\n    // ...options\n  });\n\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    applyMiddleware(sagaMiddleware, logger, routerMiddleware(history))\n  );\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n  return store;\n}\n"],"sourceRoot":""}